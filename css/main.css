

/************************************************************************ COMMON 공통으로 들어가는 부분 프로젝트 전체에 영향을 미치는 부분 BODY / IMG 선택자 **********************************************************/
body {
    color: #666; /* 기본색깔은 검정색 / 어두운 회색으로 넣는다 */
    font-size: 16px; /* 폰트싸이즈 */
    font-weight: 400; /* 글짜의 두께 */
    line-height: 1.4; /* 기본글꼴 크키 행간을 제공한다 줄높이*/
    /* color: red;
    font-size: 100px; */
    font-family: 'Nanum Gothic', sans-serif; /* https://fonts.google.com/ 브라우저들어가서 폰트선택적용 개발자도구에서 확인가능 유료폰트 주의*/
    /* height: 6000px;  스크롤바 생성 [$$$$$$$$연결$$$$$$$$] --> 다섯번째 beage 작업하면서 우측 스크롤 추가작업 */
}
 img {               /* 스타벅스 로그 밑에 남는여백 없어진다 */
    display: block; /* 기본적으로 이미지는 인라인요소 이지만 , 화면을 구성하는 레이아웃으로 사용하겠다 !!! */
}
a {
    text-decoration: none; /* 공통부분에 내프로젝트 전체에  a태그 밑줄을 사용하지 않겠다 */
}
.inner { /* header 영역에 inner가 잡혀있어서 전체적인 프로젝트에 .inner에서 속성값을 부여한다 */
    width: 1100px;
    margin: 0 auto; /* 외부여백 위/아래 값은 없오 좌우는 오토 가운데 정렬 */
    position: relative; /* 화면에 가운데로 몰아져 있는 영역안에서 배치로 위치를 잡아준다 위치상에 부모요소가 되어줄수 있는 값을 지정해준다 */
}
/************************************ [ 공통부분에 버튼부분 만들기 btn클래스요소로[HTML] 연결 $$$$$$$연결$$$$$$$$$ 하단의 VISUAL(몸통) 버튼작업  ] *******************************************/
/* 선택자 우선순위 적용 .btn 점수10점 클래선택자 2개 20점 .btn.btn--reverse 덮어쓸수 있는 우선순위 점수를 확복한것  */
.btn { /*[우선순위10점]*/
    width: 130px;
    padding: 10px;
    border: 2px solid #333;
    border-radius: 4px;
    color: #333;
    font-size: 16px;
    font-weight: 700;
    text-align: center; /* 버튼안에서 문자의 정렬 */
    cursor: pointer; /* 손가락 이미지 설정 */
    box-sizing: border-box; /* 요소가 커지지 않도록 */
    display: block;
    transition: .4s; /* 글자색 자연스럽게 전환 0.4초 */
}
.btn:hover { /* 마우스를 올렸을시 :hover 효과 가상클래스 선택자 마우스 올리면 어두운 회색으로 바뀜 */
    background-color: #333;
    color: #fff;
}
.btn.btn--reverse { /* [우선순위20점] 반전된 상태를 의미한다 reverse .btn.btn일치선택자 bem방식(앞에있는 요소의상태의미) 즉,reverse스가 있는 앞에요소는 -- 앞에있는것을 정확하게 명시  */
    background-color: #333;
    color: #fff;
}
.btn.btn--reverse:hover { /*[우선순위 30점 클래스선택자 2개 + 가상클래스선택자] */
    background-color: transparent; /* 원복  투명색 */
    color: #333; 
}
.btn.btn--brown {
    color: #592b18;
    border-color: #592b18;
}
.btn.btn--brown:hover {
    color: #fff;
    background-color: #592b18;
}
.btn.btn--gold {
    color: #d9aa8a;
    border-color:  #d9aa8a;
}
.btn.btn--gold:hover {
    color: #fff;
    background-color: #d9aa8a;
}
.btn.btn--white {
    color: #fff;
    border-color: #fff;
}
.btn.btn--white:hover {
    color: #333;
    background-color: #fff;
}
/* 공통적으로 애니메이션 처리를 할수있게 버튼쪽 밑에 작업함 */
.back-to-position {
    opacity: 0; /* 투명도 0 완전하게 투명 */
    transition: 1s; /* 전환효과 1초 */
}
.back-to-position.to-right { /* 일치선택자를 사용해서 선택자+선택자 / 왼쪽에서 오른쪽으로 나타나는 애니메이션 */
    transform: translateX(-150px); /* 변환효과추가 x축으로 수평이동 -150 */
}
.back-to-position.to-left { /* 오른쪽에서 왼쪽으로 나타나는 애니메이션 처리 원래상태로 돌아오게 작업 */
    transform: translateX(150px); 
}
.show .back-to-position { /*.show(띄고).back-to-position 후손클래스 */
    opacity: 1; /* 화면에 보이게 작업 */
    transform: translateX(0); /* 원래 위치로 돌아오게 만드는 개념 */
}
/* 일치선택자.delay-0 사용 애니메이션 딜레이 처리 */
.show .back-to-position.delay-0 {
    transition-delay: 0s; /* 0 기본값 딜레이가 없다 바로시작 */
}
.show .back-to-position.delay-1 {  /* 0.3초 */
    transition-delay: 0.3s;
}
.show .back-to-position.delay-2 {  /* 0.6초 */
    transition-delay: 0.6s;
}
.show .back-to-position.delay-3 {  /* 0.9초 */
    transition-delay: 0.9s;
}

/************************************************************************ HEDER 헤데의 내용이 시작 ***************************************************************************************/
/* 코드의 연결성을 메모의 뒤에 [연결1 /연결2]로 연결고리를 메모해두었다  */
/*---------------------------------------------------------------  첫번째 작업 [헤더와 드롭다운 메뉴-로고] ------------------------------------------------------------------------------------------------ */
header { /* css의 header는 기본값이 block 이다 블락에서 아래 뷰포트 기준으로 바뀐다 */
    width: 100%;
    /* width: auto;기존 기본값설정인데 --> fixed를 사용하므로서 뷰포트를 기준으로 배치 되기때문에 가로너비는 기본값이 auto auto를 통해 부라우저 자동계산 요소의 너비를 최대한이 아닌 최소한으로 사용하려고 한다 */
    /* position: relative; 연결아래 bages[$$$$$$$$$$연결$$$$$$$$$$$]*/
    background-color: #f6f5f0;
    border-bottom: 1px solid #c8c8c8;
    position: fixed; /* 스크롤바 생성 [$$$$$$$$연결$$$$$$$$] --> 다섯번째 beage 작업하면서 우측 스크롤 추가작업 // 뷰포트기준으로 배치하겠다 fixed 헤더부분 스크롤내려도 상단고정 */
    top: 0;         /* position 추가설명 fixed 와 absolute 는 요소는 가로너비가 최소한 줄어들려고 시도하고 블록요소는 가로너비가 최대한 넓어질려고 시도한다 화면이 정상적으로 늘렸을때 표출이 안된다 꽉찬화면 안됨 */
    z-index: 9; /* 다른섹션보다 더위에 있다고 작업하는 부분 [요소의 쌓임순서] 배지가 위로 올라왔다 [%%%%%%%%%%%%%%연결$$$$$$$$$$$$$ 배지] */
}
header > .inner {     /* 2.구조적인 부모요소 아래 로고의 inner */
   /* width: 1100px;   중복으로 소스주석/ 공통.inner에 작성해둠 1. inner 클래스는 width와 margin 을 사용해서 헤더라는 영역에 가운데 정렬 */
    height: 120px;  /* 2. heigt를 사용하면 로고가 아래여백이 다시생김 ,  다음으로 로고가 헤더영역에 수직 가운데 위치하려고 한다  */
   /* margin: 0 auto; 중복으로 소스주석/ 공통.inner에 작성해둠 1. 외부여백 magin 0(위/아래) auto(좌/우)  로고 페이지를 키우면 로얄불루색은 짤리고 왼쪽에 있는 스타벅스 로고가 왼쪽에서 커지는것을 확인 가능한다*/
   /* background-color: orange; */
   /* position: relative; 중복으로 소스주석/ 공통.inner에 작성해둠 2. 아래하단에 logo 선택자에 position을 사용하였다면 부모요소에도 사용했는지 확인 해야한다 [연결1] ---> 로고가 헤더영역 안에서 수직 가운데 배치완료 */
}
header .logo {           /* 2. logo를 부모컨테이너 header .inner에서 속성 height / position / top / bottom / margin을 활용하여 헤더영역에 수직정렬 배치한것 [중요!!!!!!!!!!!!!!!!!!!!!!!!!] */
    height: 75px;        /* 2. 로고가 수직에 가운데에 배치되는것을 확인 할수 있다 아래 속성들 다적용후 */
    position: absolute;  /* 2. 부모요소 기준으로 배치하겠다 선언[ 연결1 ]*/
    top: 0;
    bottom: 0;
    left: 0; /*2. 로고는 왼쪽에 위차하고 있다 명시 */
    margin: auto;
   /* display: none;  스타버스 로고 숨키기 */
}

/*-----------------------------------------------------------------------------------------두번째 작업 [헤더와 드롭다운 메뉴-서브메뉴] ------------------------------------------------------------------------------------------------------*/
/* [헤더와 드롭다운 메뉴-서브메뉴] */
/* 첫번째로 선택자들 html구조와 맵핑 // html 구조에 작성한것들을 선택자로 css에 미리 명시 하는 습관을 들이자 !!! */
/* 정확하게 header안에 들어있는.sub-menu안에 있는 munu라는 이름에 ul태그만 지정 스타일을 지정 하겠다 (앞)상위선택자들을 띄어쓰기를 통해서 후손선택자 선택 */
/* 메뉴들 링크연결및 수평정렬후 메뉴늘 중간 구분선 작업 sign in | My Starbucks | 등 | 등 |  */

header .sub-menu { /*1선택자작업 sub-menu/ [$$$$$$$연결$$$$$$] 아래쪽 header .sub-menu .search 돋보기작업  메뉴리스트 돋보기 오른쪽 이동  */
    position: absolute; /*구조적인 부모에서 position값 체크 구조적인 부모는 inner html에서 확인 가능 */
    top: 10px;
    right: 0;
    display: flex;
}
/* --------------------------------------------------------------------------------두번째작업의 2 [ 메뉴들 중간 구분선 작업]  ---------------------------------------------------------------------------------------------------------- */
header .sub-menu ul.menu { /* 2선택자작업 ul/ */
    font-family: Arial, Helvetica, sans-serif; /*글꼴작업 다른폰트를 사용하겠다 선언*/
    display: flex;        /* 메뉴 리스트들 수직으로 정렬되어 있던것을 수평정렬시킴 */
}
header .sub-menu ul.menu li { /*3선택자작업 li/------------ 배치 부모요소 하단 before 쪽에 position 연결 */
    position: relative;
}
header .sub-menu ul.menu li::before { /* {::border 가상요소선택자사용} 인라인요소 가로/세로값 x before 내부 앞쪽에 내용정의 할수있다 content  [**********중간구분선작업***********] */
    content: "";
    display: block; /* 배치 인라인요소인데 너는 가로/세로값 갖을수 있게 block 요소라고 정의한다 명시적으로 남겨두 되고 없어도 된다 position absolute가 있기 때문에  */
    width: 1px;
    height: 12px;
    background-color: #e5e5e5; /* 메뉴에 중간 구분선을 검정색으로 표기 */
    position: absolute;        /* 배치 정확한 요소사이에 배치 부모요소 기준으로 배치 위치값을 지정 구조적인 부모요소 확인해서 위치상에 부모요소를 만들어 줘야 한다  -->코드의 최적화 사용된 요소는 display값이 자동으로 block으로 변한다 */
    top: 0;    /*배치 */
    bottom: 0; /*배치 */ 
    margin: auto; /*배치 수직정렬 위/아래 브라우저가 자동계산 aouto 좌우여백 0 */
}
header .sub-menu ul.menu li:first-child::before { /* {가상클래스선택자/가상요소선택자사용} 추가 여러 li태그들 중에 첫번째 태그를 찾아서 첫번째 li태그의 가상요소선택자 before를 어떻게 할거냐  선택 | 구분선 없어짐 [중요 !!!!!!!] */
    display: none;
}
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------두번째작업의 1 [ 메뉴들 링크연결및 수평정렬 작업 ] --------------------------------------------------------------------------------------------------------- */
header .sub-menu ul.menu li a {/* 4선택자작업 a 링크*/
    /* background-color: red; */
    font-size:  12px;
    padding: 11px 16px; /* 위/아래 11px 좌/우16px 기본적으로 a 태그는 인라인요소이다 인라인요소는 마진과 패딩 위/아래값 가로/세로 값 안된다 */
    display: block;     /* 인라인 요소가 아니라 너는 블록요소이다 정의해주면 된다*/
    color: #656565;   /* 회색이 되고 a요소는 브라우저에서 기본적으로 제공하는 밑줄이 쳐있다  */
   /* text-decoration: none; 밑줄 제거 */
}
/*css의 허버효과 추과  :가상클래스 선택자에 hover 추가  마우스를 올리면 어떻게 처리하겠다 명시하는것 */
header .sub-menu ul.menu li a:hover {  /*  a 태그 마무리  */
    color: #000;
} 
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------두번째작업의 3 [헤더와 드롭다운메뉴-검색 써치라는 클래스 검색부분 만들기 ] ----------------------------------------------------------------------------------------------*/
header .sub-menu .search { /* 5선택자작업  seach --> div만들었고 블록요소 가로너비 최대한 늘어나려고한다 돋보기 아이콘이 맨우측으로 이동됨 돋보기는 4개 메뉴에 우측에 배치할것 [$$$$$$$$$연결$$$$$$$$$$$] 선택자 header .sub-men        */
                           /* HTML쪽 SUB-MENU UL태그와/ SEARCH를 담고있는 CSS 선택자를 찾는다 */
    /* background-color: red; */
    height: 34px;
    position: relative; /***icon쪽 자식요소 position 연결*/

}
header .sub-menu .search input {/* 6선택자작업 [첫번째로] input 부분부터 작업을 진행한다  */
    width: 36px;
    height: 34px;
    padding:  4px 10px;
    border: 1px solid #ccc;
    box-sizing: border-box;
    border-radius: 5px;
    outline: none;
    background-color: #fff;
    color: #777;
    transition: all; /*기본값은 all 인데 가로너비만 사용 자연스럽게 input box 늘어짐 */
}
header .sub-menu .search input:focus { /* {:focus 가상클래스선택자} 추가 */
    width: 190px;
    border-color: #690;
}


header .sub-menu .search .material-icons { /* 7선택자작업   material-icon [두번째로] icon 작업을 진행함   */
    height: 24px;           /* 배치 추가조건으로 요소의 너비가 항상 포함되어 있어야 한다  */
    position: absolute;    /**** 배치!!!!!!!!! 구조적인 부모요소에 position 값이 있는지 확인해야 한다  구조상의 부모요서는 앞에 .search가 된다  */
    top: 0;               /* 배치 */
    bottom: 0;            /* 배치 */  
    right: 5px;          /* 배치 돋보기 맨우측으로 이동됨 4개메뉴에 돋보기는 배치할것  */
    margin: auto;       /* 배치 */
    transition: .4s;   /*javascript 포커스 실행시 움직임 자연스럽게 설정 */
}
header .sub-menu .search.focused .material-icons { /* [$$$$$$$$javascript에서 써치 부분에 포커스 클래스를 추가하여 css에 추가로 일치선택자를 통해 연결$$$$$$$$$$$$$$].focused 기입 즉: 써치를하고 포커스가 적용이 되면 icon을 안보이게 하겠다 */
    opacity: 0;
}

/* -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/* ----------------------------------------------------------------------------------------------------------[세번째 작업 헤더와 드롭다운 메뉴-메인메뉴 ] --------------------------------------------------------------------------------*/
/* 작업순서를 1.2.3.4.5.6.7.8. 으로 표기하였다 */
header .main-menu {
    position: absolute; /* 4. 배치 - 위치상에 부모요소를 기준으로 배치  */
    right: 0;           /* 4. 배치 - 위치상에 부모요소를 기준으로 배치  */
    bottom: 0;          /* 4. 배치 - 위치상에 부모요소를 기준으로 배치  */
                        /* 4. 배치 - 위치상에 부모요소를 기준으로 배치  */
    z-index: 1;         /* 4. 배치 - z-index 요소 쌓임 순서로 드롭다운이 실행시 다른 요소들 덮기위해서 1값을 적용  */
    display: flex; /* 1.수평정렬 */
     
}
header .main-menu .item {  /* 메인메뉴는 ul태그이고/ 그안에 item 클래스를 갖고있는 li태그들이 들어있다 */

}
header .main-menu .item .item__name {/* 2. item__name 클래스를 선택자로 지정 */
    padding: 10px 20px 34px 20px;    /* 2. 시계방향 탑부터 시짝 오른쪽으로 */
    font-family: Arial, sans-serif; /*  2. 글꼴*/
    font-size:  13px;
}
header .main-menu .item:hover .item__name {  /* 3. 마우스를 올리면 hover 효과 추가 --> 가상클래스 선택자는 item__contents에도 영향이 가서 item__name:hover가 아닌  */
    background-color: #2c2a29;
    color: #669900;
    border-radius: 6px 6px 0 0; /* 3. 좌/우상단 둥글게 만들기 나머지는 적용하지 않겠다 0 0 */
}
                                          /* .item__contents 클래스를 선택자로 지정 */
header .main-menu .item .item__contents { /* 5.html쪽에 2개의 영역을 만들었다 */
                                         /*  5.[드롭다운영역을 2개로 만들기] */
    width: 100%;
    position: fixed; /* 5. fixed 뷰표트를 기준으로 배치하겠다 */
    left: 0;
    display: none; /*  5. 2개의층이 보이지 않는다 */
}
header .main-menu .item:hover .item__contents { /* 5. display: none;  2개의층이 보이지 않는다 item.:hover 가상클래스선택자 호버를 통해서 마우스를 오리면  */
    display: block;  /* 5. display: none;  2개의층이 보이지 않는다 item.:hover 가상클래스선택자 호버를 통해서 마우스를 올리면  */
}
header .main-menu .item .item__contents .contents__menu { /* 5. 드롭영역1 html 요소 css선택자로 연결*/
    background-color: #2c2a29;
    /* 5-1 height: 200px;  컨텐츠 메뉴안에 하위 메뉴리스트들 만들어서 높이값은 지웠다 하단 4번째 작업에서 하위리스트들 만들고 삭제 */
}
/* ----------------------------------------------------------------------------------------------------------[네번째 작업 헤더와 드롭다운 메뉴-메인메뉴-하위메뉴리스트 ] --------------------------------------------------------------------------------*/
/* 작업순서를 1.2.3.4.5.6.7.8. 으로 표기하였다  위에서 1.2.3.4. 사용하였으면 다음으로 1-1/2-1/3-1로 하였다 */
header .main-menu .item .item__contents .contents__menu > ul { /* 1-1. 자식선택자로 > 사용 명시 - 자식선택자가 아닌 일반 ul이면 하위선택자가 되서 ul태그 모두 적용이 된다 */
    display: flex;
    padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li { /* 2-1.  */
    width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {/* 3-1.  */
    padding: 3px 0 12px 0;
    font-size: 14px;
    color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {/* 4-1.  */
    padding: 5px 0;
    font-size: 12px;
    color: #999;
    cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover { /* 7-1 가상클래스 :hover를 추가해서 마우스 클릭시 초록색으로 변경하도록 적용하였다 */
    color: #669900;
}
header .main-menu .item .item__contents .contents__texture { /* 5./6-1  드롭영역2 html 요소 css선택자로 연결*/
    padding: 26px 0;
    font-size: 12px; /*상속개념 아래 h4 p 적용되어 있음 */
    background-image: url("../images/main_menu_pattern.jpg") ; /* css폴더안에 . 밖으로 나가야지만 ./ : ../images 폴더가 나온다 */
}
header .main-menu .item .item__contents .contents__texture h4 { /*6-1*/
    font-weight: 700;
    color: #999;
}
header .main-menu .item .item__contents .contents__texture p {/*6-1*/
    color: #669900;
    margin: 4px 0 14px; /*상 중 하 top/left/right/bottom */   
}
/*-----------------------------------------------------------------------------------------------------[다섯번째 작업 헤더와 드롭다운 메뉴 - 전역배지]--------------------------------------------------------------------------------*/
header .badges { /* 부모요소 기준으로 배치 inner 밖에 HTML요소를 만들었으니 부모는 herader가 된다  헤더부분에 position이 있는지 없는지 파악[ $$$$$$$$$$$$$연결$$$$$$$$$$$$$$] 상위 헤더쪽 */
    position: absolute;
    top: 132px;
    right: 12px;
}
header .badges .badge {
    border-radius: 10px;
    overflow: hidden; /* 직사각형 틀이 둥글게 깍이면 이미지가 깍인부분에 넘지않게 적용 */
    margin-bottom: 12px;
    box-shadow: 4px 4px 10px rgba(0,0,0,.15);  /* x축 4 y축 4 블러 10 rgba(검정색0,0,0,0.15) a니까 알파값 투명도값도 넣어줘야 한다 .앞에 0생략 */
    cursor: pointer;
}



/*********************************************************************************************[ 여섯번째  VISUAL(몸통) 순차적 애니메이션 -전역 버튼스타일  ] ****************************************************************************/
/* 작업순서를 1.2.3.4.5.6.7.8. 으로 표기하였다  위에서 1.2.3.4. 사용하였으면 다음으로 1-1/2-1/3-1로 하였다 */
/* 선택자 작업은 밑에까지 다 마무리 하고 visual부터 순차적으로 작업진행함 */

.visual { /* 상위 헤더부분에 auto 값으로 줄어들려고 한다 header > .inner height: 120px 고정 120보다 줄어들지 못한다. */
    margin-top: 120px;
    background-image: url("../images/visual_bg.jpg"); /*이미지삽입 이미지는 main.css 기준으로 밖으로 한번 나가야되서 ..2개 사용 */
    background-position: center;
}
.visual .inner { /*.inner COMMON 공통 영역에 지정된 값을 영향받는다 */
    height: 646px;
    /* background-color: orange; */
}
.visual .title { /*.inner 생략  */
    position: absolute; /* 구조적인 부모요소로 기분으로 배치 부모요소는 .inner  .inner에 position 값이 설정되어 있다 */
    top: 88px;
    left: -10;
}
.visual .title .btn { /*.inner 생략 버튼은 마직막에 작업함 버튼 5가지를 공통영역에 위에 먼저 작업해서 배치작업을 시작했다   */
    position: absolute; /* 부모요소 기준 배치 */
    top: 259px; 
    left: 173px;
}
.visual .cup1.image { /*.cup1.image 일치선택자 */
    position: absolute;
    bottom: 0;
    right: -47px;
}
.visual .cup1.text {/*.cup1.text 일치선택자 */
    position: absolute;
    top: 38px;
    right: 171px;
}
.visual .cup2.image { /*.cup2.image 일치선택자 */
    position: absolute;
    bottom: 0px;
    right: 162px;
}
.visual .cup2.text {/*.cup2.text */
    position: absolute;
    top: 321px;
    right: 416px;
}
.visual .spoon {
    position: absolute;
    bottom: 0;
    left: 275px;
}
.visual .fade-in { /* 투명도 0 순차적으로 안보이다가 나타나게 javascript로 작업 한다 */
    opacity: 0;
}
/*********************************************************************************************[ 7번째   NOTICE (몸통) 공지사항   ] ****************************************************************************/
/* 작업순서를 1.2.3.4.5.6.7.8. 으로 표기하였다  위에서 1.2.3.4. 사용하였으면 다음으로 1-1/2-1/3-1로 하였다 */
/* 최대한 상호작용할수 있는 구조로 만들어야 효과적이다 */
.notice { /*[공지사항]*/

}
.notice .notice-line {
    position: relative;
}
.notice .notice-line .bg-left {
    position: absolute; /* 부모기준 배치 */
    top: 0;
    left: 0;
    width: 50%;
    height: 100%;
    background-color: #333;
}
.notice .notice-line .bg-right {
    position: absolute;
    top: 0;
    right: 0;
    width: 50%;
    height: 100%;
    background-color: #f6f5ef;
}
.notice .notice-line .inner {
    height: 62px; /* height: 200px; 이너부분에 높이를 200으로 설정하면 이너의 부모요소인 노티스라인은 높이값이 별도로없어서 화이트 속성의 높이값은 auto 이고 세로너비가 최대한 줄어들려고 하다가 inner에 설정된 높이값을 만나서 안줄어든다 200동일 */
    /* border: 2px solid red;  */
    display: flex;
}
.notice .notice-line .inner__left {  /* [공지사항 왼쪽] 작업  */
    width:  60%;  /* 영역 60프로 차지*/
    height: 100%;
    background-color: #333;
    display: flex; /* 아래하단 공지사항 관련 수평정렬 */
    align-items: center;
}
.notice .notice-line .inner__left h2 { /* 공지사항 왼쪽 스타일 입히기 */
    color: #fff;
    font-size:  17px;
    font-weight: 700;
    margin-right: 20px;
}
.notice .notice-line .inner__left .swiper-container {
    height: 62px;
    /* background-color: black; */
    flex-grow: 1; /* 세로너비를 최대한 많이 사용하고 있고 영역이 최대한 가로로 늘어남 세로너비 최대한 display: flex  */
}
.notice .notice-line .inner__left .swiper-slide { /* 공지사항 슬라이드 글귀 */
    height: 62px;
    display: flex;
    align-items: center;
}
.notice .notice-line .inner__left .swiper-slide a {/* 공지사항 슬라이드 a태그 글귀 색상 */
    color: #fff;
}
.notice .notice-line .inner__left .notice-line__more { /* [플러스 아이콘] 작업 가운데 정렬 */
    width: 62px;    
    height: 62px;
    display: flex;
    justify-content: center;
    align-items: center;
}
.notice .notice-line .inner__left .notice-line__more .material-icons {
    color: #fff;
    font-size: 30px; /* 기본크기 24px 아이콘 플러스모양 작업 */
}

.notice .notice-line .inner__right {  /* [오른쪽 공지사항] 작업 */
    width: 40%;  /* 영역 40프로 차지*/
    height: 100%;
    display: flex;
    justify-content: flex-end; /* 수평정렬에 오른쪽으로 배치시키겠다 */
    align-items: center;
}
.notice .notice-line .inner__right h2 {
    font-size: 17px;
    font-weight: 700;
}
.notice .notice-line .inner__right .toggle-promotion {
    width: 62px;
    height: 62px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
}
.notice .notice-line .inner__right .toggle-promotion .material-icons {
    font-size: 30px;    /* 왼쪽 작업 more버튼과 동일한 크기로 적용  */
}
/*********************************************************************************************[ 8번째   NOTICE (몸통) 공지사항에 중간사진들작업  ] ****************************************************************************/
/*************************************** 9번째 공지사항에 위에화살표 hide 생성 및 숨김 처리 promotin *********************************************************************/
.notice .promotion {/* promotin  */
    height: 693px;
    background-color: #f6f5ef;
    position: relative;
    transition: height .4s; /*693px에서 하단 hide 0px로 크기가 자연스럽게 변할수 있도록 속성을 주었다 */
    overflow: hidden; /* 요소의 크기가 줄어드면서 넘치지 않게 넘치는거는 잘릴수 있게 속성값을 주었다 */
}
.notice .promotion.hide {/* promotin [중요!!!!!!] 1.javascript에서 hide클래스 추가후 css에 연결 일치선택자로.promotion.hide promotion요소에 .hide가 붙어있는것을 의미한다.  */
    height:  0;
}
.notice .promotion .swiper-container {
    /* width: 2477px;  수동 계산 작업 / 잘못된 계산이 될수도 있어서 함수를 제공한다 */
    width: calc(819px * 3 + 20px); /* 하단 슬라이드 사진 3개 너비계산 */
    height: 553px;
    /* background-color:  orange;  화면에 어떻게 나오는지 확인하려고 입력 
    text-align:  center;
    font-size:  200px; */
    position: absolute; /* 부모요소 기준으로 배치 컨텐츠 글씨 화면배율과 상관없이 정중앙 배치 */
    top: 40px;
    left: 50%; /* left 속성 기억하기  왼쪽으로 컨테이너를 배치 시킨후 아래 margin-left 속성의 음수값으로  컨테이너의 절반너비를 왼쪽으로 다시 댕겨와서 가운데 정렬시킨것 아주중요 !!!!!!!!!!!!!!!!!!!!!!!!!!!! */
    /* margin-left: -1238.5px;  수동으로 계산된값 마진속성에 */
    margin-left: calc((819px * 3 + 20px) / -2 ); /*절반만큼 나누어서 2 로 주는데 음수값이 붙어야 가운데 정렬이 되므로 -2 로 나누어 주면된다  */
}
.notice .promotion .swiper-slide {
    opacity: .2; /* 반투명 */
    position: relative;
}
.notice .promotion .swiper-slide-active {
    opacity: 1; /* 투명 */
}
.notice .promotion .swiper-slide-active .btn { /* 슬라이드 사진속 [자세히 보기]버튼작업  공통쪽에 버튼을 작업해두어서 가로너비는 이쪽에서 넣을 필요가 없다  */
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}
.notice .promotion .swiper-pagination { /* ..... 버튼이 슬라이드 사진들 아래로 자리 잡게 만들었다 .swiper-pagination */
    bottom: 40px;
    left: 0;
    right: 0;

}
.notice .promotion .swiper-pagination .swiper-pagination-bullet { /* 배경이미지를 통해서 특정한 이미지를 고정하였다 */
    background-color: transparent; /* 배경색상이 사라진다 둥근버튼에 */
    background-image: url("../images/promotion_slide_pager.png"); /* css 기준으로 폴더 밖으로 한번 나가서 찾아라 ../ */
    width: 12px;
    height: 12px;
    margin-right: 6px;
    outline: none;
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet:last-child {/* :last-child 가상클래스 선택자 페이지네이서 블랫들중에서 마지막 요소 */
   margin-right: 0; 
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet-active { /* -active 붙어있는것이 지금 활성화된 페이지 번호 페이지번호에 불이들어와있다해서 on을 사용한것  */
    background-image: url("../images/promotion_slide_pager_on.png");
}
/************** 여기까지 화면배율이 커지고 작아질때 .......... 으로 클릭시 원하는 슬라이드 사진쪽 표출되게 작업하였다  pagination  ...................................................................................................*/
/******************************************************************************[    이전 / 다음 버튼 ]***************************************************************************************************************************************/
.notice .promotion .swiper-prev, 
.notice .promotion .swiper-next { /* 비슷한 css 속성이 들어가고 모양도 일치할때 사용하기 아래것 처럼 사용해도 되는데 겱국 , 통해서 선택자를 2개 사용한것 다중 선택자  */
    width:  42px; 
    height:  42px;
    border: 2px solid #333;
    border-radius: 50%;
    position: absolute;
    top: 300px;
    z-index: 1; /* 요소의 쌓임순서를 올린다 */
    cursor: pointer;
    outline:  none; /* 파랑색 실선을 사용하지 않겠다 */
    display: flex;
    justify-content: center;
    align-items: center;
    transition: .4s; /*0.4초*/
}
/* .notice .promotion .swiper-next {
    width:  42px;
    height:  42px;
    border: 2px solid #333;
    border-radius: 50%;
    position: absolute;
    top: 300px;
    z-index: 1;  요소의 쌓임순서를 올린다
    cursor: pointer;
    outline:  none;  파랑색 실선을 사용하지 않겠다 

} */
/************************************** 왼쪽 / 오른쪽 값은 프리브와 넥스트와 값이 다르다  다른부분이여서 따로 빼서 적용 *******************/
.notice .promotion .swiper-prev {
    left: 50%;
    margin-left: -480px;
}
.notice .promotion .swiper-next {
    right: 50%;
    margin-right: -480px;
}
.notice .promotion .swiper-prev:hover,
.notice .promotion .swiper-next:hover {
    background-color: #333;
    color: #fff;
}

/************************************************************************************ 10번째 유튜브 영상 배경 -리워즈 *******************************************************************************************************/
/*REWARDS*/
.rewards {
    position: relative;
  }
  .rewards .bg-left {
    width: 50%;
    height: 100%;
    background-color: #272727;
    position: absolute;
    top: 0;
    left: 0;
  }
  .rewards .bg-right {
    width: 50%;
    height: 100%;
    background-color: #d5c798;
    position: absolute;
    top: 0;
    right: 0;
  }
  .rewards .inner { /* COMMON 전역속성으로 POSITION: relative; 값을 넣어 두었다 */
    background-image: url("../images/rewards.jpg");
    height: 241px;
  }
  .rewards .btn-group { /* common쪽에 버튼을 공통으로 설정 250px랑 사이즈가 다르다 공통쪽은 260 한줄에 2개의 버튼이 위치할수 없다 */
    position: absolute; /* 부모기준으로 배치 */
    right: 0;
    bottom: 24px;
    width: 250px;
    display: flex;
    flex-wrap: wrap; /* 수평으로 만드는데 가로너비250보다 내용이 넘칠것 같으면 줄바꿈을 허용하겠다는 의미 */
  }
  .rewards .btn-group .btn.sign-up {
    /*width: 130px;*/
    margin-right: 10px; /* 버튼과 버튼 사이 여백 */
  }
  .rewards .btn-group .btn.sign-in {
    width: 110px;
  }
  .rewards .btn-group .btn.gift {
    margin-top: 10px; /* 버튼 위, 아래 여백 */
    flex: 1; /* display 컨테이너 내부에서 최대한 너비를 증가시켜라 */
  }
  
  
  /*YOUTUBE VIDEO*/
  .youtube {
    position: relative;
    height: 700px;
    background-color:#333;
    overflow: hidden; /* 넓은 오랜지 박스가 위쪽과 아래쪽이 잘린다 */
  }
  .youtube .youtube__area {  /*풀hd기준 FHD 1920 X 1080   #player에 부모요소가 된다 */
    width: 1920px;
    position: absolute;
    background-color: orange;
    /* 16비율 */
    left: 50%; /* 정가운데를 기준으로 배치 화면에 왼쪽에서 시작해서 50%로 배치 오른쪽으로 배치됨 */
    margin-left: calc(1920px / -2); /* 화면 맨 왼쪽에 배치된 영역을 가운데 정렬하기 위해서 왼쪽으로 끌어오기 */
    /* 9비율 */
    top: 50%; /* 위에서 50% 영역에 배치하겠다 */
    margin-top: calc(1920px * 9 / 16 / -2); /* 가로너비 1920px 세로너비 16:9 비율 / -2 를 해줘야지 세로너비의 절반만큼 끌어올릴수 있다 */
  }
  .youtube .youtube__area::before {
    content: "";
    display: block;
    /* 16:9 영상 비율로 요소 크기 만들기! */
    width: 100%;
    height: 0;
    padding-top: 56.25%; /* 내부에 위쪽에 여백 */
  }
  .youtube .youtube__cover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,.3); /* 30퍼센트에 불투명도를 갖는 검정색을 배경으로 출력 */
    background-image: url("../images/video_cover_pattern.png"); /* 비디오커버 패턴 */
  }
  #player {  /* 아이디가 player인 선택자 사용 */
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;   
  }
  /* 유튜브 영상앞에 둥둥 떠다니는 이미지 만들기 애니메이션 효과 추가 */
  .youtube .inner { /* youtube클래스 inner라는 클래스가 들어있다 HTML 단에서 */
    height: 700px; 
    /* height: inherit; */
    /* background-color: royalblue; */

  }
  .youtube .floating1 { /* inner 안에 클래스  애니메이션 첫번째 요소 */
    position: absolute;
    top: 50px;
    left: 0;

  }
  .youtube .floating2 { /* inner 안에 클래스  애니메이션 두번째 요소 */
    position: absolute;
    top: 350px;
    left: 150px;

  }
  /* .youtube .floating3 { /* inner 안에 클래스  애니메이션 세번째 요소 // 아래 하단에 적용시켰으며 .youtube를 .season-product로 변경하였다 
    position: absolute;
    bottom: -200px;
    right: 0;
  } */
/**************************************************************************** 11번째 SEASON PRODUCT 고정이미지 배경 *******************************************************************/
/* SEASON PRODUCT*/
.season-product {
    background-image: url("../images/season_product_bg.jpg");
  }
  .season-product .inner {
    height: 400px;
  }
  .season-product .floating3 {
    position: absolute;
    top: -200px;
    right: 0;
  }
  .season-product .text-group {
    position: absolute;
    top: 110px;
    right: 100px;
  }
  .season-product .text-group .title {
    margin-bottom: 10px;
  }
  .season-product .text-group .description {
    margin-bottom: 15px;
  }

/* RESERVE COFFEE */ 
.reserve-coffee {
    background-image: url("../images/reserve_bg.jpg"); /* 백그라운드 리핏으로 내가 원하는 이미지들은 반복적으로 표출이 된다 */
}
.reserve-coffee .inner {
    height: 400px;
}
.reserve-coffee .reserve-logo { /* 로고 */
    position: absolute;
    top: 110px;
    left: 0;
}
.reserve-coffee .text-group { /* 제품 텍스트 */
    position: absolute;
    top: 124px;
    left: 208px;
}
.reserve-coffee .product { /* 제품사진 */
    position: absolute;
    top: 0;
    right: 0;
}
/* PICK YOUR FAVORITE */
.pick-your-favorite {
    background-image: url("../images/favorite_bg.jpg"); /* 배경이미지 설정 */
    background-repeat: no-repeat; /* 배경이미지 반복재생 없음 */
    background-position: center;
    background-attachment: fixed; /* 요소가 화면적으로 위 아래로 스크롤리 될때 같이 움직이는게 기본값인데 요소가 스크롤될때 화면은 같이 움직이지 않는 구조 설정할때 fixed */
    background-size: cover; /* 배경의 이미지를 요소의 더 넒은 너비에 맞춰서 출력이 된다 뷰포트 브라우저전체영역 */
}
.pick-your-favorite .inner {
    padding: 110px 0; /* 위/아래 좌우는 사용하지 않겠다 */

}
.pick-your-favorite .text-group {
    margin-left: 100px;    
 /* background-color: orange; */
    width: 362px;
    display: flex;
    flex-wrap: wrap; /* 줄바꿈이 가능한 형태로 만들어 준다 */
    justify-content: flex-end; /* 우측으로 붙어서 출력이 된다 */

}
.pick-your-favorite .text-group .title {
    margin-bottom: 40px;
}
.pick-your-favorite .text-group .description {
    margin-bottom: 40px;

}
/**************************************************************************** 12번째 RESERVE STORE 3D애니메이션작업 *******************************************************************/
/* 페럴렉스 스크롤링을 이용한 스크롤 이용시 배경은 고정  */
/* 클래스안에 클래스 */
.reserve-store {
    background-image: url("../images/reserve_store_bg.jpg");
    background-repeat: no-repeat; /* 반복출력하지 않겠다 */
    background-position: center;
    background-attachment: fixed;   /* 배경고정 */
    background-size: cover;
}
.reserve-store .inner {
    height: 600px;
    display: flex;
    justify-content: center; /* 수평 가운데 정렬 */
    align-items: center; /* 수직 가운데 정렬 */
}
.reserve-store .medal {
    width: 334px;   /* 가로너비가 넓어지려고 하므로 박스안 영역 밖에서도 마우스 효과가 적용이됨 가로 세로 높이 일치시킴 */
    height: 334px;  /* 가로너비가 넓어지려고 하므로 박스안 영역 밖에서도 마우스 효과가 적용이됨 가로 세로 높이 일치시킴 */
    perspective: 600px; /* 원근거리 추가 3D효과 더 자세하게 표출 */
}
.reserve-store .medal .front, 
.reserve-store .medal .back { /* 선택자를 2개이상 사용하는 다중선택자 사용함 */
    width: 334px;
    height: 334px;
    position: absolute;
    backface-visibility: hidden; /* 뒷면은 화면에서 보이지 않는다 */
    transition: 1s; /* 자연스러운 변환 속도 */
}
.reserve-store .medal .front {
   /*  position: absolute;    위, 아래 둥근 이미지 겹친다  --> 프론트 , 백 같이 영향을 미칠것 같아서 상위 다중선택자쪽에 적용시킨다 */
    transform: rotateY(0deg); /* 0도에서 시작한다 */
}
.reserve-store .medal:hover .front { /* 메달부분에 가상클래스 :hover 적용시킨다 메달에다 마우스를 올리면 front를 어떻게 처리할것인지 */
    transform: rotateY(180deg);
}
.reserve-store .medal .back { /* 뒤집어 지면서 메달에 뒷면은 보이지 않는다 상위 hidden 적용시켜둠 */
    transform: rotateY(-180deg);
}
.reserve-store .medal:hover .back { /* 메달부분에 가상클래스 :hover 적용시킨다 메달에다 마우스를 올리면 back를 어떻게 처리할것인지*/
    transform: rotateY(0deg); /* -180도에서 원래 상태로 되돌리기 */
}
.reserve-store .medal:hover .back .btn { /* html 버튼 생성 선택자 활용해서 연결  [btn 버튼 클래스는 상위에 common쪽에 공용으로 적용시켜두었음]  */
    /* 따로 가로너비를 지정하지 않아도 수평가운데로 위치할수 있다  */
    position: absolute; /* 부모요소 기준으로 배치 */
    top: 240px;
    left: 0px;  
    right: 0px;
    margin: auto;
}
/**************************************************************************** 13번째 FIND THE STORE 스크롤 위치 계산 - 애니메이션(1), 애니메이션(2) *******************************************************************/
/* FIND THE STORE */
.find-store { /* section 쪽에는 */
    background-image: url("../images/find_store_bg.jpg");
}
.find-store .inner { /* position: absolute 바로하단에 부모요소가 된다  common에 inner 부모요소 위치값을 설정해두었다 */
    height: 400px;
}
.find-store .texture1 {
    position: absolute;
    top: 0;
    left: 400px;
}
.find-store .texture2 {
    position: absolute;
    bottom: 0;
    right: 0;
}
.find-store .picture  { /* picture1,2를 전부 포함한 picture에 1,2 이미지를 둥글게 하기위해서 적용 */
    border-radius: 50%; /* 둥근 이미지 적용 */
    box-shadow: 2px 2px 8px rgba(0,0,0,.5); /* x축 y축 블러가 8px rgba() 함수를 사용해서 검정색에 불투명도를 가지는 그림자를 생성한다 */
    position: absolute;
}
.find-store .picture1 {
    /* position: absolute; 공통영역에 설정 */
    top: -60px;
    left: 0;
}
.find-store .picture2 {
    /* position: absolute;  공통영역에 설정 */
    top: 150px;
    left: 250px;
}
.find-store .text-group {
    position: absolute;
    top: 120px;
    left: 550px;
    
}
.find-store .text-group .title {
    margin-bottom: 20px;
}
.find-store .text-group .description {
    margin-bottom: 20px;
}
/**************************************************************************** 14번째 AWARDS 다중 요소 슬라이드 작업 *******************************************************************/
/* AWARDS 슬라이드가 되는 영역을 명확하게 표기 */
.awards {
    background-color: #272727;
}
.awards .inner {
    padding: 40px 0; /* 내부여백 위,아래 40 좌우는 0 */
}
.awards .swiper-container {
    width: 100%;
    height: 40px;
}
/* prev 이전 next 다음 버튼 작업 다중선택자 사용하였다 중복되는 속성을 한번에 적용한다 */
.awards .swiper-prev,
.awards .swiper-next {
    width: 42px;
    height: 42px; 
    outline: none;
    border: 2px solid #fff; /* 테두리선 2px두께 선의 생상은 흰색 */
    border-radius: 50%; /* 모서리 둥글게 작업 */
    color: #fff; /* css 상속개념으로 하위요소로 상속 시킴 */
    opacity: .3;
    cursor: pointer;
    display: flex; /* 중앙정렬 */
    justify-content: center; /* 수평 가운데 */
    align-items: center; /* 수직 가운데 */
    position: absolute; /* 부모요소 기준으로 배치 한다 prev, next 부모요소는 inner가 된다 */
    top: 0;
    bottom: 0;
    margin: auto; /* 가운데 배치 꼭확인해야할 수치 요소의 너비를 수직에 관한것이니 세로 너비 margin 바깥여백(외부)을 말한다 padding(내부)여백 */
}
.awards .swiper-prev {
    left: -100px;
  }
  .awards .swiper-next {
    right: -100px;
  }
  .awards .swiper-prev:hover,
  .awards .swiper-next:hover {
    background-color: #fff;
    color: #333;
  }
  /**************************************************************************** 15번째 FOOTER 영역 작업 *******************************************************************/
  footer {
    background-color: #272727;
    border-top: 1px solid #333;
}
  footer .inner {
    padding: 40px 0 60px 0; /* 내부여백 위 우측 밑 좌측 시계방향 */
}
  footer .menu {
    display: flex;
    justify-content: center; /* 수평 가운데 정렬 */
}
  footer .menu li {        /* HTML li 태그에 각각의 before라는 가상요소를 만들어서 li태그 6개의 스타일을 적용시킴 */
    position: relative;
}
  footer .menu li::before { /* :: 가상요소선택자 before content: ""; 꼭 있어야 한다 before의 부모는 바로 붙어있는 li가 된다 */
    content: "";
    width: 3px;
    height: 3px;
    background-color: #555;
    position: absolute; /* before 인라인 요소 가로 세로값 갖을려면 블록요소 변경 해야하는데 부모기준으로 값이 배치 되어있다 position: absolute; 사용하면 display값이 자동으로 블록요소로 변경됨 */
    top: 0;
    bottom: 0;
    right: -1px;
    margin: auto;
}
footer .menu li:last-child::before { /*:last-child라는 가상클래스 선택자 li의 마지막 li 태그를 뜻하고, 마지막 태그의 가상요소 :: before 사용 */
    display: none;
}
  footer .menu li a { /* a br img span 인라인 요소 */
    color: #ccc;  /* 아주 밝은 회색 */
    font-size: 12px;
    font-weight: 700;
    padding: 15px; /* 내부여백 인라인 요소는 마진과 패딩이라는 여백이라는 속성에 위,아래값 정상적으로 사용못한다 */
    display: block; /* 인라인 요소를 블록 요소로 바꾸어주기 */
}
footer .menu li a.green { /* a태그에 일치선택자 그린 붙어있으면 글자색 변경 */
    color: #669900; /* html 클래스 green을 넣어서 연결 한다 */
} 
footer .btn-group {
    margin-top: 20px;
    display: flex;
    justify-content: center;
}
footer .btn-group .btn {
    font-size: 12px;
    margin-right: 10px;
}
footer .btn-group .btn:last-child { /* :last-child: 버튼중에 마지막버튼은, 제일 마지막에 버튼은 우측여백이 필요하지 않는다 margin-right:10px; 사용하지 않는다 */
    margin-right: 0px;
}
footer .info {
    margin-top: 30px;
    text-align: center
}
footer .info span {  /* span요소는 인라인 요소이고 위 , 아래 수직 구조아님 왼쪽 오른쪽 수평 구조임 */
    margin-right: 20px;
    color: #999;
    font-size: 12px;
}
footer .info span:last-child { 
    margin-right: 0;
} 
footer .copyright {
    color: #999;
    font-size: 12px;
    text-align: center;
    margin-top: 12px;
}
footer .logo { /* 이미지 요소가 있는 부분 margin의 가운데정렬 같은경우 maginleft auto maginright auto 로 가운데 정렬 하려면 가로너비가 필수로 있어야 한다 */
               /* 브라우저가 이미지 출력하는 가로 너비를 임의로 미리 알고 있다고 생각하고 가로너비를 적용 안시켜도 사용이 가능하다 */
    margin: 30px auto 0; /* 값이 3개 상 중 하로 확인이 가능하다 */
}
/* 페이지 상단으로 이동 */
#to-top { /* id가 to-top인 요소를 정의 할때 #을 사용한다 */
    width: 42px;
    height: 42px;
    background-color: #333;
    color: #fff;
    border: 2px solid #fff;
    border-radius: 10px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 9; /* 다른 섹션에서 항상 최상위로 설정 한다 */
}