/*

메인 css 와 로그인 css 겹치는 부분으로 common.css 를 만들어서 소스를 옮겨 두었다 첫번째부터 다섯번째 작업까지

*/
/*********************************************************************************************[ 여섯번째  VISUAL(몸통) 순차적 애니메이션 -전역 버튼스타일  ] ****************************************************************************/
/* 작업순서를 1.2.3.4.5.6.7.8. 으로 표기하였다  위에서 1.2.3.4. 사용하였으면 다음으로 1-1/2-1/3-1로 하였다 */
/* 선택자 작업은 밑에까지 다 마무리 하고 visual부터 순차적으로 작업진행함 */

.visual { /* 상위 헤더부분에 auto 값으로 줄어들려고 한다 header > .inner height: 120px 고정 120보다 줄어들지 못한다. */
    margin-top: 120px;
    background-image: url("../images/visual_bg.jpg"); /*이미지삽입 이미지는 main.css 기준으로 밖으로 한번 나가야되서 ..2개 사용 */
    background-position: center;
}
.visual .inner { /*.inner COMMON 공통 영역에 지정된 값을 영향받는다 */
    height: 646px;
    /* background-color: orange; */
}
.visual .title { /*.inner 생략  */
    position: absolute; /* 구조적인 부모요소로 기분으로 배치 부모요소는 .inner  .inner에 position 값이 설정되어 있다 */
    top: 88px;
    left: -10;
}
.visual .title .btn { /*.inner 생략 버튼은 마직막에 작업함 버튼 5가지를 공통영역에 위에 먼저 작업해서 배치작업을 시작했다   */
    position: absolute; /* 부모요소 기준 배치 */
    top: 259px; 
    left: 173px;
}
.visual .cup1.image { /*.cup1.image 일치선택자 */
    position: absolute;
    bottom: 0;
    right: -47px;
}
.visual .cup1.text {/*.cup1.text 일치선택자 */
    position: absolute;
    top: 38px;
    right: 171px;
}
.visual .cup2.image { /*.cup2.image 일치선택자 */
    position: absolute;
    bottom: 0px;
    right: 162px;
}
.visual .cup2.text {/*.cup2.text */
    position: absolute;
    top: 321px;
    right: 416px;
}
.visual .spoon {
    position: absolute;
    bottom: 0;
    left: 275px;
}
.visual .fade-in { /* 투명도 0 순차적으로 안보이다가 나타나게 javascript로 작업 한다 */
    opacity: 0;
}
/*********************************************************************************************[ 7번째   NOTICE (몸통) 공지사항   ] ****************************************************************************/
/* 작업순서를 1.2.3.4.5.6.7.8. 으로 표기하였다  위에서 1.2.3.4. 사용하였으면 다음으로 1-1/2-1/3-1로 하였다 */
/* 최대한 상호작용할수 있는 구조로 만들어야 효과적이다 */
.notice { /*[공지사항]*/

}
.notice .notice-line {
    position: relative;
}
.notice .notice-line .bg-left {
    position: absolute; /* 부모기준 배치 */
    top: 0;
    left: 0;
    width: 50%;
    height: 100%;
    background-color: #333;
}
.notice .notice-line .bg-right {
    position: absolute;
    top: 0;
    right: 0;
    width: 50%;
    height: 100%;
    background-color: #f6f5ef;
}
.notice .notice-line .inner {
    height: 62px; /* height: 200px; 이너부분에 높이를 200으로 설정하면 이너의 부모요소인 노티스라인은 높이값이 별도로없어서 화이트 속성의 높이값은 auto 이고 세로너비가 최대한 줄어들려고 하다가 inner에 설정된 높이값을 만나서 안줄어든다 200동일 */
    /* border: 2px solid red;  */
    display: flex;
}
.notice .notice-line .inner__left {  /* [공지사항 왼쪽] 작업  */
    width:  60%;  /* 영역 60프로 차지*/
    height: 100%;
    background-color: #333;
    display: flex; /* 아래하단 공지사항 관련 수평정렬 */
    align-items: center;
}
.notice .notice-line .inner__left h2 { /* 공지사항 왼쪽 스타일 입히기 */
    color: #fff;
    font-size:  17px;
    font-weight: 700;
    margin-right: 20px;
}
.notice .notice-line .inner__left .swiper-container {
    height: 62px;
    /* background-color: black; */
    flex-grow: 1; /* 세로너비를 최대한 많이 사용하고 있고 영역이 최대한 가로로 늘어남 세로너비 최대한 display: flex  */
}
.notice .notice-line .inner__left .swiper-slide { /* 공지사항 슬라이드 글귀 */
    height: 62px;
    display: flex;
    align-items: center;
}
.notice .notice-line .inner__left .swiper-slide a {/* 공지사항 슬라이드 a태그 글귀 색상 */
    color: #fff;
}
.notice .notice-line .inner__left .notice-line__more { /* [플러스 아이콘] 작업 가운데 정렬 */
    width: 62px;    
    height: 62px;
    display: flex;
    justify-content: center;
    align-items: center;
}
.notice .notice-line .inner__left .notice-line__more .material-icons {
    color: #fff;
    font-size: 30px; /* 기본크기 24px 아이콘 플러스모양 작업 */
}

.notice .notice-line .inner__right {  /* [오른쪽 공지사항] 작업 */
    width: 40%;  /* 영역 40프로 차지*/
    height: 100%;
    display: flex;
    justify-content: flex-end; /* 수평정렬에 오른쪽으로 배치시키겠다 */
    align-items: center;
}
.notice .notice-line .inner__right h2 {
    font-size: 17px;
    font-weight: 700;
}
.notice .notice-line .inner__right .toggle-promotion {
    width: 62px;
    height: 62px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
}
.notice .notice-line .inner__right .toggle-promotion .material-icons {
    font-size: 30px;    /* 왼쪽 작업 more버튼과 동일한 크기로 적용  */
}
/*********************************************************************************************[ 8번째   NOTICE (몸통) 공지사항에 중간사진들작업  ] ****************************************************************************/
/*************************************** 9번째 공지사항에 위에화살표 hide 생성 및 숨김 처리 promotin *********************************************************************/
.notice .promotion {/* promotin  */
    height: 693px;
    background-color: #f6f5ef;
    position: relative;
    transition: height .4s; /*693px에서 하단 hide 0px로 크기가 자연스럽게 변할수 있도록 속성을 주었다 */
    overflow: hidden; /* 요소의 크기가 줄어드면서 넘치지 않게 넘치는거는 잘릴수 있게 속성값을 주었다 */
}
.notice .promotion.hide {/* promotin [중요!!!!!!] 1.javascript에서 hide클래스 추가후 css에 연결 일치선택자로.promotion.hide promotion요소에 .hide가 붙어있는것을 의미한다.  */
    height:  0;
}
.notice .promotion .swiper-container {
    /* width: 2477px;  수동 계산 작업 / 잘못된 계산이 될수도 있어서 함수를 제공한다 */
    width: calc(819px * 3 + 20px); /* 하단 슬라이드 사진 3개 너비계산 */
    height: 553px;
    /* background-color:  orange;  화면에 어떻게 나오는지 확인하려고 입력 
    text-align:  center;
    font-size:  200px; */
    position: absolute; /* 부모요소 기준으로 배치 컨텐츠 글씨 화면배율과 상관없이 정중앙 배치 */
    top: 40px;
    left: 50%; /* left 속성 기억하기  왼쪽으로 컨테이너를 배치 시킨후 아래 margin-left 속성의 음수값으로  컨테이너의 절반너비를 왼쪽으로 다시 댕겨와서 가운데 정렬시킨것 아주중요 !!!!!!!!!!!!!!!!!!!!!!!!!!!! */
    /* margin-left: -1238.5px;  수동으로 계산된값 마진속성에 */
    margin-left: calc((819px * 3 + 20px) / -2 ); /*절반만큼 나누어서 2 로 주는데 음수값이 붙어야 가운데 정렬이 되므로 -2 로 나누어 주면된다  */
}
.notice .promotion .swiper-slide {
    opacity: .2; /* 반투명 */
    position: relative;
}
.notice .promotion .swiper-slide-active {
    opacity: 1; /* 투명 */
}
.notice .promotion .swiper-slide-active .btn { /* 슬라이드 사진속 [자세히 보기]버튼작업  공통쪽에 버튼을 작업해두어서 가로너비는 이쪽에서 넣을 필요가 없다  */
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}
.notice .promotion .swiper-pagination { /* ..... 버튼이 슬라이드 사진들 아래로 자리 잡게 만들었다 .swiper-pagination */
    bottom: 40px;
    left: 0;
    right: 0;

}
.notice .promotion .swiper-pagination .swiper-pagination-bullet { /* 배경이미지를 통해서 특정한 이미지를 고정하였다 */
    background-color: transparent; /* 배경색상이 사라진다 둥근버튼에 */
    background-image: url("../images/promotion_slide_pager.png"); /* css 기준으로 폴더 밖으로 한번 나가서 찾아라 ../ */
    width: 12px;
    height: 12px;
    margin-right: 6px;
    outline: none;
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet:last-child {/* :last-child 가상클래스 선택자 페이지네이서 블랫들중에서 마지막 요소 */
   margin-right: 0; 
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet-active { /* -active 붙어있는것이 지금 활성화된 페이지 번호 페이지번호에 불이들어와있다해서 on을 사용한것  */
    background-image: url("../images/promotion_slide_pager_on.png");
}
/************** 여기까지 화면배율이 커지고 작아질때 .......... 으로 클릭시 원하는 슬라이드 사진쪽 표출되게 작업하였다  pagination  ...................................................................................................*/
/******************************************************************************[    이전 / 다음 버튼 ]***************************************************************************************************************************************/
.notice .promotion .swiper-prev, 
.notice .promotion .swiper-next { /* 비슷한 css 속성이 들어가고 모양도 일치할때 사용하기 아래것 처럼 사용해도 되는데 겱국 , 통해서 선택자를 2개 사용한것 다중 선택자  */
    width:  42px; 
    height:  42px;
    border: 2px solid #333;
    border-radius: 50%;
    position: absolute;
    top: 300px;
    z-index: 1; /* 요소의 쌓임순서를 올린다 */
    cursor: pointer;
    outline:  none; /* 파랑색 실선을 사용하지 않겠다 */
    display: flex;
    justify-content: center;
    align-items: center;
    transition: .4s; /*0.4초*/
}
/* .notice .promotion .swiper-next {
    width:  42px;
    height:  42px;
    border: 2px solid #333;
    border-radius: 50%;
    position: absolute;
    top: 300px;
    z-index: 1;  요소의 쌓임순서를 올린다
    cursor: pointer;
    outline:  none;  파랑색 실선을 사용하지 않겠다 

} */
/************************************** 왼쪽 / 오른쪽 값은 프리브와 넥스트와 값이 다르다  다른부분이여서 따로 빼서 적용 *******************/
.notice .promotion .swiper-prev {
    left: 50%;
    margin-left: -480px;
}
.notice .promotion .swiper-next {
    right: 50%;
    margin-right: -480px;
}
.notice .promotion .swiper-prev:hover,
.notice .promotion .swiper-next:hover {
    background-color: #333;
    color: #fff;
}

/************************************************************************************ 10번째 유튜브 영상 배경 -리워즈 *******************************************************************************************************/
/*REWARDS*/
.rewards {
    position: relative;
  }
  .rewards .bg-left {
    width: 50%;
    height: 100%;
    background-color: #272727;
    position: absolute;
    top: 0;
    left: 0;
  }
  .rewards .bg-right {
    width: 50%;
    height: 100%;
    background-color: #d5c798;
    position: absolute;
    top: 0;
    right: 0;
  }
  .rewards .inner { /* COMMON 전역속성으로 POSITION: relative; 값을 넣어 두었다 */
    background-image: url("../images/rewards.jpg");
    height: 241px;
  }
  .rewards .btn-group { /* common쪽에 버튼을 공통으로 설정 250px랑 사이즈가 다르다 공통쪽은 260 한줄에 2개의 버튼이 위치할수 없다 */
    position: absolute; /* 부모기준으로 배치 */
    right: 0;
    bottom: 24px;
    width: 250px;
    display: flex;
    flex-wrap: wrap; /* 수평으로 만드는데 가로너비250보다 내용이 넘칠것 같으면 줄바꿈을 허용하겠다는 의미 */
  }
  .rewards .btn-group .btn.sign-up {
    /*width: 130px;*/
    margin-right: 10px; /* 버튼과 버튼 사이 여백 */
  }
  .rewards .btn-group .btn.sign-in {
    width: 110px;
  }
  .rewards .btn-group .btn.gift {
    margin-top: 10px; /* 버튼 위, 아래 여백 */
    flex: 1; /* display 컨테이너 내부에서 최대한 너비를 증가시켜라 */
  }
  
  
  /*YOUTUBE VIDEO*/
  .youtube {
    position: relative;
    height: 700px;
    background-color:#333;
    overflow: hidden; /* 넓은 오랜지 박스가 위쪽과 아래쪽이 잘린다 */
  }
  .youtube .youtube__area {  /*풀hd기준 FHD 1920 X 1080   #player에 부모요소가 된다 */
    width: 1920px;
    position: absolute;
    background-color: orange;
    /* 16비율 */
    left: 50%; /* 정가운데를 기준으로 배치 화면에 왼쪽에서 시작해서 50%로 배치 오른쪽으로 배치됨 */
    margin-left: calc(1920px / -2); /* 화면 맨 왼쪽에 배치된 영역을 가운데 정렬하기 위해서 왼쪽으로 끌어오기 */
    /* 9비율 */
    top: 50%; /* 위에서 50% 영역에 배치하겠다 */
    margin-top: calc(1920px * 9 / 16 / -2); /* 가로너비 1920px 세로너비 16:9 비율 / -2 를 해줘야지 세로너비의 절반만큼 끌어올릴수 있다 */
  }
  .youtube .youtube__area::before {
    content: "";
    display: block;
    /* 16:9 영상 비율로 요소 크기 만들기! */
    width: 100%;
    height: 0;
    padding-top: 56.25%; /* 내부에 위쪽에 여백 */
  }
  .youtube .youtube__cover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,.3); /* 30퍼센트에 불투명도를 갖는 검정색을 배경으로 출력 */
    background-image: url("../images/video_cover_pattern.png"); /* 비디오커버 패턴 */
  }
  #player {  /* 아이디가 player인 선택자 사용 */
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;   
  }
  /* 유튜브 영상앞에 둥둥 떠다니는 이미지 만들기 애니메이션 효과 추가 */
  .youtube .inner { /* youtube클래스 inner라는 클래스가 들어있다 HTML 단에서 */
    height: 700px; 
    /* height: inherit; */
    /* background-color: royalblue; */

  }
  .youtube .floating1 { /* inner 안에 클래스  애니메이션 첫번째 요소 */
    position: absolute;
    top: 50px;
    left: 0;

  }
  .youtube .floating2 { /* inner 안에 클래스  애니메이션 두번째 요소 */
    position: absolute;
    top: 350px;
    left: 150px;

  }
  /* .youtube .floating3 { /* inner 안에 클래스  애니메이션 세번째 요소 // 아래 하단에 적용시켰으며 .youtube를 .season-product로 변경하였다 
    position: absolute;
    bottom: -200px;
    right: 0;
  } */
/**************************************************************************** 11번째 SEASON PRODUCT 고정이미지 배경 *******************************************************************/
/* SEASON PRODUCT*/
.season-product {
    background-image: url("../images/season_product_bg.jpg");
  }
  .season-product .inner {
    height: 400px;
  }
  .season-product .floating3 {
    position: absolute;
    top: -200px;
    right: 0;
  }
  .season-product .text-group {
    position: absolute;
    top: 110px;
    right: 100px;
  }
  .season-product .text-group .title {
    margin-bottom: 10px;
  }
  .season-product .text-group .description {
    margin-bottom: 15px;
  }

/* RESERVE COFFEE */ 
.reserve-coffee {
    background-image: url("../images/reserve_bg.jpg"); /* 백그라운드 리핏으로 내가 원하는 이미지들은 반복적으로 표출이 된다 */
}
.reserve-coffee .inner {
    height: 400px;
}
.reserve-coffee .reserve-logo { /* 로고 */
    position: absolute;
    top: 110px;
    left: 0;
}
.reserve-coffee .text-group { /* 제품 텍스트 */
    position: absolute;
    top: 124px;
    left: 208px;
}
.reserve-coffee .product { /* 제품사진 */
    position: absolute;
    top: 0;
    right: 0;
}
/* PICK YOUR FAVORITE */
.pick-your-favorite {
    background-image: url("../images/favorite_bg.jpg"); /* 배경이미지 설정 */
    background-repeat: no-repeat; /* 배경이미지 반복재생 없음 */
    background-position: center;
    background-attachment: fixed; /* 요소가 화면적으로 위 아래로 스크롤리 될때 같이 움직이는게 기본값인데 요소가 스크롤될때 화면은 같이 움직이지 않는 구조 설정할때 fixed */
    background-size: cover; /* 배경의 이미지를 요소의 더 넒은 너비에 맞춰서 출력이 된다 뷰포트 브라우저전체영역 */
}
.pick-your-favorite .inner {
    padding: 110px 0; /* 위/아래 좌우는 사용하지 않겠다 */

}
.pick-your-favorite .text-group {
    margin-left: 100px;    
 /* background-color: orange; */
    width: 362px;
    display: flex;
    flex-wrap: wrap; /* 줄바꿈이 가능한 형태로 만들어 준다 */
    justify-content: flex-end; /* 우측으로 붙어서 출력이 된다 */

}
.pick-your-favorite .text-group .title {
    margin-bottom: 40px;
}
.pick-your-favorite .text-group .description {
    margin-bottom: 40px;

}
/**************************************************************************** 12번째 RESERVE STORE 3D애니메이션작업 *******************************************************************/
/* 페럴렉스 스크롤링을 이용한 스크롤 이용시 배경은 고정  */
/* 클래스안에 클래스 */
.reserve-store {
    background-image: url("../images/reserve_store_bg.jpg");
    background-repeat: no-repeat; /* 반복출력하지 않겠다 */
    background-position: center;
    background-attachment: fixed;   /* 배경고정 */
    background-size: cover;
}
.reserve-store .inner {
    height: 600px;
    display: flex;
    justify-content: center; /* 수평 가운데 정렬 */
    align-items: center; /* 수직 가운데 정렬 */
}
.reserve-store .medal {
    width: 334px;   /* 가로너비가 넓어지려고 하므로 박스안 영역 밖에서도 마우스 효과가 적용이됨 가로 세로 높이 일치시킴 */
    height: 334px;  /* 가로너비가 넓어지려고 하므로 박스안 영역 밖에서도 마우스 효과가 적용이됨 가로 세로 높이 일치시킴 */
    perspective: 600px; /* 원근거리 추가 3D효과 더 자세하게 표출 */
}
.reserve-store .medal .front, 
.reserve-store .medal .back { /* 선택자를 2개이상 사용하는 다중선택자 사용함 */
    width: 334px;
    height: 334px;
    position: absolute;
    backface-visibility: hidden; /* 뒷면은 화면에서 보이지 않는다 */
    transition: 1s; /* 자연스러운 변환 속도 */
}
.reserve-store .medal .front {
   /*  position: absolute;    위, 아래 둥근 이미지 겹친다  --> 프론트 , 백 같이 영향을 미칠것 같아서 상위 다중선택자쪽에 적용시킨다 */
    transform: rotateY(0deg); /* 0도에서 시작한다 */
}
.reserve-store .medal:hover .front { /* 메달부분에 가상클래스 :hover 적용시킨다 메달에다 마우스를 올리면 front를 어떻게 처리할것인지 */
    transform: rotateY(180deg);
}
.reserve-store .medal .back { /* 뒤집어 지면서 메달에 뒷면은 보이지 않는다 상위 hidden 적용시켜둠 */
    transform: rotateY(-180deg);
}
.reserve-store .medal:hover .back { /* 메달부분에 가상클래스 :hover 적용시킨다 메달에다 마우스를 올리면 back를 어떻게 처리할것인지*/
    transform: rotateY(0deg); /* -180도에서 원래 상태로 되돌리기 */
}
.reserve-store .medal:hover .back .btn { /* html 버튼 생성 선택자 활용해서 연결  [btn 버튼 클래스는 상위에 common쪽에 공용으로 적용시켜두었음]  */
    /* 따로 가로너비를 지정하지 않아도 수평가운데로 위치할수 있다  */
    position: absolute; /* 부모요소 기준으로 배치 */
    top: 240px;
    left: 0px;  
    right: 0px;
    margin: auto;
}
/**************************************************************************** 13번째 FIND THE STORE 스크롤 위치 계산 - 애니메이션(1), 애니메이션(2) *******************************************************************/
/* FIND THE STORE */
.find-store { /* section 쪽에는 */
    background-image: url("../images/find_store_bg.jpg");
}
.find-store .inner { /* position: absolute 바로하단에 부모요소가 된다  common에 inner 부모요소 위치값을 설정해두었다 */
    height: 400px;
}
.find-store .texture1 {
    position: absolute;
    top: 0;
    left: 400px;
}
.find-store .texture2 {
    position: absolute;
    bottom: 0;
    right: 0;
}
.find-store .picture  { /* picture1,2를 전부 포함한 picture에 1,2 이미지를 둥글게 하기위해서 적용 */
    border-radius: 50%; /* 둥근 이미지 적용 */
    box-shadow: 2px 2px 8px rgba(0,0,0,.5); /* x축 y축 블러가 8px rgba() 함수를 사용해서 검정색에 불투명도를 가지는 그림자를 생성한다 */
    position: absolute;
}
.find-store .picture1 {
    /* position: absolute; 공통영역에 설정 */
    top: -60px;
    left: 0;
}
.find-store .picture2 {
    /* position: absolute;  공통영역에 설정 */
    top: 150px;
    left: 250px;
}
.find-store .text-group {
    position: absolute;
    top: 120px;
    left: 550px;
    
}
.find-store .text-group .title {
    margin-bottom: 20px;
}
.find-store .text-group .description {
    margin-bottom: 20px;
}
/**************************************************************************** 14번째 AWARDS 다중 요소 슬라이드 작업 *******************************************************************/
/* AWARDS 슬라이드가 되는 영역을 명확하게 표기 */
.awards {
    background-color: #272727;
}
.awards .inner {
    padding: 40px 0; /* 내부여백 위,아래 40 좌우는 0 */
}
.awards .swiper-container {
    width: 100%;
    height: 40px;
}
/* prev 이전 next 다음 버튼 작업 다중선택자 사용하였다 중복되는 속성을 한번에 적용한다 */
.awards .swiper-prev,
.awards .swiper-next {
    width: 42px;
    height: 42px; 
    outline: none;
    border: 2px solid #fff; /* 테두리선 2px두께 선의 생상은 흰색 */
    border-radius: 50%; /* 모서리 둥글게 작업 */
    color: #fff; /* css 상속개념으로 하위요소로 상속 시킴 */
    opacity: .3;
    cursor: pointer;
    display: flex; /* 중앙정렬 */
    justify-content: center; /* 수평 가운데 */
    align-items: center; /* 수직 가운데 */
    position: absolute; /* 부모요소 기준으로 배치 한다 prev, next 부모요소는 inner가 된다 */
    top: 0;
    bottom: 0;
    margin: auto; /* 가운데 배치 꼭확인해야할 수치 요소의 너비를 수직에 관한것이니 세로 너비 margin 바깥여백(외부)을 말한다 padding(내부)여백 */
}
.awards .swiper-prev {
    left: -100px;
  }
  .awards .swiper-next {
    right: -100px;
  }
  .awards .swiper-prev:hover,
  .awards .swiper-next:hover {
    background-color: #fff;
    color: #333;
  }
/*
  main.css 에서 common.css 로 푸터 내용도 이관시켰다 
*/
/* 페이지 상단으로 이동 */
#to-top { /* id가 to-top인 요소를 정의 할때 #을 사용한다 */
    width: 42px;
    height: 42px;
    background-color: #333;
    color: #fff;
    border: 2px solid #fff;
    border-radius: 10px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 9; /* 다른 섹션에서 항상 최상위로 설정 한다 */
}